---
interface Props {
  shadow?: boolean;
  colorSliceWidth?: number;
  sliceCycleTime?: number;
  cycleDirection?: 'left' | 'right';
}

const {shadow = false, colorSliceWidth = 10, sliceCycleTime = 7, cycleDirection = 'right'} = Astro.props;

// @ts-ignore
const baseUrl = import.meta.env.BASE_URL ?? '//';
// @ts-ignore
const rainbowLineJs = import.meta.env.RAINBOW_LINE_JS || 'js/rainbow-line-v0.2.1.js';

const rainbowLineSrc = `${baseUrl}${baseUrl.endsWith('/') ? '' : '/'}${rainbowLineJs}`;
---

<rainbow-line
  class="rainbow"
  color-slice-width={colorSliceWidth}
  slice-cycle-time={sliceCycleTime}
  cycle-direction={cycleDirection}></rainbow-line>
{
  shadow && (
    <rainbow-line
      class="rainbow-shadow"
      color-slice-width={colorSliceWidth}
      slice-cycle-time={sliceCycleTime}
      cycle-direction={cycleDirection}
    />
  )
}

<script is:inline async type="module" src={rainbowLineSrc}></script>

<style>
  .rainbow {
    height: var(--rainbow-line-height, 4px);
  }
  .rainbow-shadow {
    --height: var(--rainbow-shadow-height, 12px);
    height: var(--height);
    opacity: var(--rainbow-shadow-opacity, 0.4);
    filter: blur(var(--height));
  }
</style>
